parameters:
- name: FindApprenticeshipTraining
  type: boolean
  default: false
- name: Reservations
  type: boolean
  default: false
- name: EmployerIncentives
  type: boolean
  default: false
- name: FindEpao
  type: boolean
  default: false

trigger: none

pr: none

variables:
- group: Release Management Resources
- group: Wildcard Cert Variables v2

resources:
  repositories:
  - repository: self
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/tags/0.2.1
    endpoint: GitHub (SFA)
  - repository: das-platform-automation
    type: github
    name: SkillsFundingAgency/das-platform-automation
    ref: refs/tags/4.2.0
    endpoint: GitHub (SFA)
  pipelines:
  - pipeline: das-employer-config
    project: Digital Apprenticeship Service
    source: das-employer-config
    branch: master

stages:
- stage: Build
  jobs:
  - template: azure-pipelines-templates/job/code-build.yml

- stage: Deploy_AT
  dependsOn: Build
  displayName: Deploy to AT
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: DEV das-apim-endpoints
  - group: DevTest Management Resources
  - group: AT DevTest Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DAS-DevTest-ARM
      SubscriptionId: $(SubscriptionId)
      Location: $(ResourceGroupLocation)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - template: azure-pipelines-templates/job/deploy-api.yml
    parameters:
      DeploymentName: Deploy_FindApprenticeshipTraining
      ServiceConnection: SFA-DAS-DevTest-ARM
      AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
      DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.zip
      ApimResourceGroup: $(ApimResourceGroup)
      InstanceName: $(InstanceName)
      AppServiceResourceGroup: $(ResourceGroupName)
      ApiVersionSetName: $(FindApprenticeshipOuterApiVersionSetName)
      ApiPath: $(FindApprenticeshipOuterApiPath)
      ApiBaseUrl: $(FindApprenticeshipOuterApiBaseUrl)
      ProductId: $(FindApprenticeshipProductId)
      ApplicationIdentifierUri: $(FindApprenticeshipOuterApiIdentifierUri)

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]    
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(ReservationsOuterApiVersionSetName)
              ApiPath: $(ReservationsOuterApiPath)
              ApiBaseUrl: $(ReservationsOuterApiBaseUrl)
              ProductId: $(ReservationsProductId)
              ApplicationIdentifierUri: $(ReservationsOuterApiIdentifierUri)

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(EmployerIncentivesOuterApiVersionSetName)
              ApiPath: $(EmployerIncentivesOuterApiPath)
              ApiBaseUrl: $(EmployerIncentivesOuterApiBaseUrl)
              ProductId: $(EmployerIncentivesProductId)
              ApplicationIdentifierUri: $(EmployerIncentivesOuterApiIdentifierUri)

  - deployment: Deploy_FindEpao
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindEpao }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindEpaoOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindEpao.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindEpaoOuterApiVersionSetName)
              ApiPath: $(FindEpaoOuterApiPath)
              ApiBaseUrl: $(FindEpaoOuterApiBaseUrl)
              ProductId: $(FindEpaoProductId)
              ApplicationIdentifierUri: $(FindEpaoOuterApiIdentifierUri)

- stage: Deploy_TEST
  dependsOn: Build
  displayName: Deploy to TEST
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: DEV das-apim-endpoints
  - group: DevTest Management Resources
  - group: TEST DevTest Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DAS-DevTest-ARM
      SubscriptionId: $(SubscriptionId)
      Location: $(ResourceGroupLocation)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindApprenticeshipOuterApiVersionSetName)
              ApiPath: $(FindApprenticeshipOuterApiPath)
              ApiBaseUrl: $(FindApprenticeshipOuterApiBaseUrl)
              ProductId: $(FindApprenticeshipProductId)
              ApplicationIdentifierUri: $(FindApprenticeshipOuterApiIdentifierUri)

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(ReservationsOuterApiVersionSetName)
              ApiPath: $(ReservationsOuterApiPath)
              ApiBaseUrl: $(ReservationsOuterApiBaseUrl)
              ProductId: $(ReservationsProductId)
              ApplicationIdentifierUri: $(ReservationsOuterApiIdentifierUri)

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(EmployerIncentivesOuterApiVersionSetName)
              ApiPath: $(EmployerIncentivesOuterApiPath)
              ApiBaseUrl: $(EmployerIncentivesOuterApiBaseUrl)
              ProductId: $(EmployerIncentivesProductId)
              ApplicationIdentifierUri: $(EmployerIncentivesOuterApiIdentifierUri)

  - deployment: Deploy_FindEpao
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindEpao }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindEpaoOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindEpao.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindEpaoOuterApiVersionSetName)
              ApiPath: $(FindEpaoOuterApiPath)
              ApiBaseUrl: $(FindEpaoOuterApiBaseUrl)
              ProductId: $(FindEpaoProductId)
              ApplicationIdentifierUri: $(FindEpaoOuterApiIdentifierUri)

- stage: Deploy_TEST2
  dependsOn: Build
  displayName: Deploy to TEST2
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: DEV das-apim-endpoints
  - group: DevTest Management Resources
  - group: TEST2 DevTest Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DAS-DevTest-ARM
      SubscriptionId: $(SubscriptionId)
      Location: $(ResourceGroupLocation)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindApprenticeshipOuterApiVersionSetName)
              ApiPath: $(FindApprenticeshipOuterApiPath)
              ApiBaseUrl: $(FindApprenticeshipOuterApiBaseUrl)
              ProductId: $(FindApprenticeshipProductId)
              ApplicationIdentifierUri: $(FindApprenticeshipOuterApiIdentifierUri)

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(ReservationsOuterApiVersionSetName)
              ApiPath: $(ReservationsOuterApiPath)
              ApiBaseUrl: $(ReservationsOuterApiBaseUrl)
              ProductId: $(ReservationsProductId)
              ApplicationIdentifierUri: $(ReservationsOuterApiIdentifierUri)

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(EmployerIncentivesOuterApiVersionSetName)
              ApiPath: $(EmployerIncentivesOuterApiPath)
              ApiBaseUrl: $(EmployerIncentivesOuterApiBaseUrl)
              ProductId: $(EmployerIncentivesProductId)
              ApplicationIdentifierUri: $(EmployerIncentivesOuterApiIdentifierUri)

  - deployment: Deploy_FindEpao
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindEpao }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindEpaoOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindEpao.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindEpaoOuterApiVersionSetName)
              ApiPath: $(FindEpaoOuterApiPath)
              ApiBaseUrl: $(FindEpaoOuterApiBaseUrl)
              ProductId: $(FindEpaoProductId)
              ApplicationIdentifierUri: $(FindEpaoOuterApiIdentifierUri)

- stage: Deploy_PP
  dependsOn: Build
  displayName: Deploy to PP
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: PP das-apim-endpoints
  - group: PreProd Management Resources
  - group: PreProd Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DIG-PreProd (ARM)
      SubscriptionId: $(SubscriptionId)
      Location: $(ResourceGroupLocation)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindApprenticeshipOuterApiVersionSetName)
              ApiPath: $(FindApprenticeshipOuterApiPath)
              ApiBaseUrl: $(FindApprenticeshipOuterApiBaseUrl)
              ProductId: $(FindApprenticeshipProductId)
              ApplicationIdentifierUri: $(FindApprenticeshipOuterApiIdentifierUri)

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(ReservationsOuterApiVersionSetName)
              ApiPath: $(ReservationsOuterApiPath)
              ApiBaseUrl: $(ReservationsOuterApiBaseUrl)
              ProductId: $(ReservationsProductId)
              ApplicationIdentifierUri: $(ReservationsOuterApiIdentifierUri)

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(EmployerIncentivesOuterApiVersionSetName)
              ApiPath: $(EmployerIncentivesOuterApiPath)
              ApiBaseUrl: $(EmployerIncentivesOuterApiBaseUrl)
              ProductId: $(EmployerIncentivesProductId)
              ApplicationIdentifierUri: $(EmployerIncentivesOuterApiIdentifierUri)

  - deployment: Deploy_FindEpao
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindEpao }}, true))
    variables:
      ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/step/deploy-api.yml
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(FindEpaoOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindEpao.Api.zip
              ApimResourceGroup: $(ApimResourceGroup)
              InstanceName: $(InstanceName)
              AppServiceResourceGroup: $(ResourceGroupName)
              ApiVersionSetName: $(FindEpaoOuterApiVersionSetName)
              ApiPath: $(FindEpaoOuterApiPath)
              ApiBaseUrl: $(FindEpaoOuterApiBaseUrl)
              ProductId: $(FindEpaoProductId)
              ApplicationIdentifierUri: $(FindEpaoOuterApiIdentifierUri)