parameters:
  DeploymentName:
  Environment:
  ServiceConnection:
  AppServiceName:
  DeploymentPackagePath:
  ApiVersionSetName:
  ApiPath: 
  ApiBaseUrl:
  ProductId:
  ApplicationIdentifierUri:
  AppRoleAssignmentsServiceConnection:
  SandboxProductId: ''

jobs:
- deployment: ${{ parameters.DeploymentName }}
  pool:
    name: DAS - Continuous Deployment Agents
  dependsOn:
  - DeployInfrastructure
  variables:
    ResourceGroupName: $[dependencies.DeployInfrastructure.outputs['DeployInfrastructure.ArmOutputs.ResourceGroupName']]
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/app-role-assignments.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.AppRoleAssignmentsServiceConnection }}
            ResourceName: ${{ parameters.AppServiceName }}
            Tenant: $(Tenant)
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: ${{ parameters.AppServiceName }}
            DeploymentPackagePath: ${{ parameters.DeploymentPackagePath }}
        - checkout: das-platform-automation
        - task: AzurePowerShell@5
          displayName: Import-ApimSwaggerApiDefinition - ${{ parameters.AppServiceName }}
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            ScriptPath: das-platform-automation/Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
            ${{ if eq(parameters.SandboxProductId, '') }}:
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName ${{ parameters.ApiVersionSetName }} `
                -ApiPath ${{ parameters.ApiPath }} `
                -ApiBaseUrl ${{ parameters.ApiBaseUrl }} `
                -ProductId ${{ parameters.ProductId }} `
                -ApplicationIdentifierUri ${{ parameters.ApplicationIdentifierUri }} `
                -Verbose
            ${{ if ne(parameters.SandboxProductId, '') }}:
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName ${{ parameters.ApiVersionSetName }} `
                -ApiPath ${{ parameters.ApiPath }} `
                -ApiBaseUrl ${{ parameters.ApiBaseUrl }} `
                -ProductId ${{ parameters.ProductId }} `
                -ApplicationIdentifierUri ${{ parameters.ApplicationIdentifierUri }} `
                -SandboxProductId ${{ parameters.SandboxProductId }} `
                -Verbose
            azurePowerShellVersion: LatestVersion
            pwsh: true