parameters:
  OuterApiName: ''
  SonarCloudProjectKey:
  TargetProjects:
  UnitTestProjects:
  PublishProject:
  AcceptanceTestProjects:
  AzureArtifactsFeed:

jobs:
- job: CodeBuild
  pool:
    name: DAS - APIM Continuous Integration Agents
  variables:
  - group: ESFA - SonarCloud
  - name: buildConfiguration
    value: release
  workspace:
    clean: all
  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

  - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
    parameters:
      SonarCloud: true
      SonarCloudProjectKey: ${{ parameters.SonarCloudProjectKey }}
      SonarCloudExtraProperties: sonar.cpd.exclusions=Shared/SFA.DAS.SharedOuterApi/Services/*Client.cs
      TargetProjects: ${{ parameters.TargetProjects }}
      UnitTestProjects: ${{ parameters.UnitTestProjects }}
      AcceptanceTestProjects: ${{ parameters.AcceptanceTestProjects }}
      RunAcceptanceTests: true
      ContinueOnVulnerablePackageScanError: true
      AzureArtifactsFeed: ${{ parameters.AzureArtifactsFeed }}

  - task: DotNetCoreCLI@2
    displayName: 'Publish Outer Api'
    inputs:
      command: publish
      publishWebProjects: false
      projects: ${{ parameters.PublishProject }}
      arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

  # if OuterApiName is empty dont copy unittest directory
  - ${{ if eq(parameters.OuterApiName, '') }}:
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        Contents: |
          azure/**
        TargetFolder: '$(build.artifactstagingdirectory)/publish'
        OverWrite: true
  - ${{ else }}:
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        Contents: |
          azure/**
          src/${{ parameters.OuterApiName }}/SFA.DAS.${{ parameters.OuterApiName }}.UnitTests/**
        TargetFolder: '$(build.artifactstagingdirectory)/publish'
        OverWrite: true

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact'
    inputs:
      targetPath: '$(build.artifactstagingdirectory)/publish'
      artifactName: 'ApimEndpointsArtifacts'
