{
	"info": {
		"_postman_id": "7c270577-f2d4-4195-a82d-3217ec31a928",
		"name": "Outer API Tests For Standards",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Courses - Authenticate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"authToken\", jsonData.access_token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{courses-api-client-id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{courses-api-client-secret}}",
							"type": "text"
						},
						{
							"key": "resource",
							"value": "{{courses-api-resource}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://login.microsoftonline.com/{{courses-api-tenant}}/oauth2/token",
					"protocol": "https",
					"host": [
						"login",
						"microsoftonline",
						"com"
					],
					"path": [
						"{{courses-api-tenant}}",
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Courses - Get List - None",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var standards = jsonData.standards;\r",
							"\r",
							"var approvedStandards = standards.filter(obj => obj.status == 'Approved for delivery');\r",
							"var retiredStandards = standards.filter(obj => obj.status == 'Retired');\r",
							"var withdrawnStandards = standards.filter(obj => obj.status == 'Withdrawn'); \r",
							"var inDevelopmentStandards = standards.filter(obj => obj.status == 'In development');\r",
							"var proposalStandards = standards.filter(obj => obj.status == 'Proposal in development');\r",
							"\r",
							"pm.test(\"Total standards from courses api with no filter matches count from ifate api\", function () {\r",
							"    var expectedValueTotal = pm.variables.get(\"totalStandardsCountFromIfate\")\r",
							"    pm.expect(standards.length).to.equal(expectedValueTotal);\r",
							"});\r",
							"\r",
							"pm.test(\"Approved for delivery standards from courses api with no filter matches count from ifate api\", function () {\r",
							"    var expectedValueApproved = pm.variables.get(\"approvedStandardsCountFromIfate\")\r",
							"    pm.expect(approvedStandards.length).to.equal(expectedValueApproved);\r",
							"});\r",
							"\r",
							"pm.test(\"Retired standards from courses api matches count from ifate api\", function () {\r",
							"    var expectedValueRetired = pm.variables.get(\"retiredStandardsCountFromIfate\")\r",
							"    pm.expect(retiredStandards.length).to.equal(expectedValueRetired);\r",
							"});\r",
							"\r",
							"pm.test(\"In development standards from courses api with no filter matches count from ifate api\", function () {\r",
							"    var expectedValueInDevelopment = pm.variables.get(\"inDevelopmentStandardsCountFromIfate\")\r",
							"    pm.expect(inDevelopmentStandards.length).to.equal(expectedValueInDevelopment);\r",
							"});\r",
							"\r",
							"pm.test(\"Withdrawn standards from courses api with no filter matches count from ifate api\", function () {\r",
							"    var expectedValueWithdrawn = pm.variables.get(\"withdrawnStandardsCountFromIfate\")\r",
							"    pm.expect(withdrawnStandards.length).to.equal(expectedValueWithdrawn);\r",
							"});\r",
							"\r",
							"pm.test(\"Proposed standards from courses api with no filter matches count from ifate api\", function () {\r",
							"    var expectedValuePropsed = pm.variables.get(\"proposalStandardsCountFromIfate\")\r",
							"    pm.expect(proposalStandards.length).to.equal(expectedValuePropsed);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true,
					"accept-encoding": true,
					"connection": true,
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Version",
						"value": "1.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{courses-api-base-url}}/Standards?filter=None",
					"host": [
						"{{courses-api-base-url}}"
					],
					"path": [
						"Standards"
					],
					"query": [
						{
							"key": "filter",
							"value": "None"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Courses - Get List - Active Available",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"m_activeAvailableCount\", jsonData.totalFiltered);\r",
							"pm.environment.set(\"m_larsCode\", jsonData.standards[0].larsCode);\r",
							"pm.environment.set(\"m_title\", jsonData.standards[0].title);\r",
							"pm.environment.set(\"m_level\", jsonData.standards[0].level);\r",
							"pm.environment.set(\"m_route\", jsonData.standards[0].route);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true,
					"accept-encoding": true,
					"connection": true,
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Version",
						"value": "1.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{courses-api-base-url}}/Standards?filter=ActiveAvailable",
					"host": [
						"{{courses-api-base-url}}"
					],
					"path": [
						"Standards"
					],
					"query": [
						{
							"key": "filter",
							"value": "ActiveAvailable"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Courses - Get List - Active",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"m_activeCount\", jsonData.totalFiltered);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true,
					"accept-encoding": true,
					"connection": true,
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Version",
						"value": "1.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{courses-api-base-url}}/Standards?filter=Active",
					"host": [
						"{{courses-api-base-url}}"
					],
					"path": [
						"Standards"
					],
					"query": [
						{
							"key": "filter",
							"value": "Active"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Courses - Get Standard Options List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var standardWithOptions = jsonData.standards.filter(obj => obj.options.length != 0)[0];\r",
							"\r",
							"pm.environment.set(\"standardWithOptions\", standardWithOptions);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Version",
						"value": "1.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{courses-api-base-url}}/Standards/options",
					"host": [
						"{{courses-api-base-url}}"
					],
					"path": [
						"Standards",
						"options"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Approvals",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.trainingCourses.length).to.eql(pm.variables.get(\"m_activeAvailableCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"    expectedValue += \",\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    expectedValue += \"\\\",\\\"level\\\":\" + pm.variables.get(\"m_level\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/findapprenticeshiptraining/TrainingCourses",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"findapprenticeshiptraining",
						"TrainingCourses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Assessors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.courses.length).to.eql(pm.variables.get(\"m_activeCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"    expectedValue += \",\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    expectedValue += \"\\\",\\\"level\\\":\" + pm.variables.get(\"m_level\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/assessors/TrainingCourses",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"assessors",
						"TrainingCourses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/campaign/TrainingCourses?sector={{m_route}}",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"campaign",
						"TrainingCourses"
					],
					"query": [
						{
							"key": "sector",
							"value": "{{m_route}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - FAT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.trainingCourses.length).to.eql(pm.variables.get(\"m_activeAvailableCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"    expectedValue += \",\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    expectedValue += \"\\\",\\\"level\\\":\" + pm.variables.get(\"m_level\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/findapprenticeshiptraining/TrainingCourses",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"findapprenticeshiptraining",
						"TrainingCourses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Find EPAO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.courses.length).to.eql(pm.variables.get(\"m_activeCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    expectedValue += \"\\\",\\\"level\\\":\" + pm.variables.get(\"m_level\");\r",
							"    expectedValue += \",\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/findepao/courses",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"findepao",
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Forecasting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.standards.length).to.eql(pm.variables.get(\"m_activeAvailableCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\\\"\" + pm.variables.get(\"m_larsCode\");\r",
							"    expectedValue += \"\\\",\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/forecasting/Courses/standards",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"forecasting",
						"Courses",
						"standards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - MA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.standards.length).to.eql(pm.variables.get(\"m_activeCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"    expectedValue += \",\\\"level\\\":\" + pm.variables.get(\"m_level\");\r",
							"    expectedValue += \",\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/manageapprenticeships/TrainingCourses/standards",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"manageapprenticeships",
						"TrainingCourses",
						"standards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Recruit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"id\\\":\\\"\" + pm.variables.get(\"m_larsCode\");\r",
							"    expectedValue += \"\\\",\\\"apprenticeshipType\\\":0,\";\r",
							"    expectedValue += \"\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/recruit/trainingprogrammes",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"recruit",
						"trainingprogrammes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standards - Reservations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Array matches count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.standards.length).to.eql(pm.variables.get(\"m_activeAvailableCount\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    var expectedValue = \"\\\"title\\\":\\\"\" + pm.variables.get(\"m_title\");\r",
							"    expectedValue += \"\\\",\\\"level\\\":\" + pm.variables.get(\"m_level\");\r",
							"    expectedValue += \",\\\"id\\\":\" + pm.variables.get(\"m_larsCode\");\r",
							"    pm.expect(pm.response.text()).to.include(expectedValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					},
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/reservations/TrainingCourses",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"reservations",
						"TrainingCourses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Standard Options - Assessors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Get Standard Options count matches Courses Get List with Active filter count\", function () {\r",
							"    pm.expect(jsonData.standards.length).to.equal(pm.variables.get(\"m_activeCount\"));\r",
							"});\r",
							"\r",
							"var expectedStandard = pm.environment.get(\"standardWithOptions\");\r",
							"\r",
							"pm.test(\"Get Standard Options list contains the expected standard\", function (){\r",
							"    var standard = jsonData.standards.filter(obj => obj.standardUId == expectedStandard.standardUId)[0];\r",
							"\r",
							"    pm.expect(standard.standardUId).to.equal(expectedStandard.standardUId);\r",
							"    pm.expect(standard.larsCode).to.equal(expectedStandard.larsCode);\r",
							"    pm.expect(standard.ifateReferenceNumber).to.equal(expectedStandard.ifateReferenceNumber);\r",
							"    pm.expect(standard.options.length).to.equal(expectedStandard.options.length);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Version",
						"value": "1",
						"type": "text"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apim-subscription-key}}",
						"description": "This key is provided by DevOps which authenticates the APIM gateway.  ",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apim-base-url}}/TrainingCourses/options",
					"host": [
						"{{apim-base-url}}"
					],
					"path": [
						"TrainingCourses",
						"options"
					]
				}
			},
			"response": []
		}
	]
}