parameters:
- name: FindApprenticeshipTraining
  type: boolean
  default: false
- name: Reservations
  type: boolean
  default: false
- name: EmployerIncentives
  type: boolean
  default: false

trigger:
  batch: false
  branches:
    include:
      - "multi-stage-yaml"

pr: none

variables:
- group: Release Management Resources
- group: Wildcard Cert Variables v2

resources:
  repositories:
  - repository: self
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    # once implemented use tags to reference the repo for backwards compatibility
    ref: refs/tags/0.0.1
    endpoint: GitHub (SFA)
  - repository: das-platform-automation
    type: github
    name: SkillsFundingAgency/das-platform-automation
    ref: refs/tags/4.1.2
    endpoint: GitHub (SFA)
  pipelines:
  - pipeline: das-employer-config
    project: Digital Apprenticeship Service
    source: das-employer-config
    branch: master
    
stages:
- stage: Build
  variables:
  - group: 'Prod Management Resources'
  - name: buildConfiguration
    value: release
  jobs:
  - job: CodeBuild
    pool:
      name: DAS - Continuous Integration
    workspace:
      clean: all
    steps:
    - task: UseGitVersion@5
      displayName: GitVersion
      inputs:
        versionSpec: 5.x
        useConfigFile: true
        configFilePath: GitVersion.yml

    - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks

    - template: azure-pipelines-templates/build/step/dependency-check.yml@das-platform-building-blocks

    - task: DotNetCoreCLI@2
      displayName: 'Publish Find Apprenticeship Training Api'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/SFA.DAS.FindApprenticeshipTraining.Api/SFA.DAS.FindApprenticeshipTraining.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish Reservations Api'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/SFA.DAS.Reservations.Api/SFA.DAS.Reservations.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Employer Incentives Api'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/SFA.DAS.EmployerIncentives.Api/SFA.DAS.EmployerIncentives.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'        
    
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:      
        Contents: |
          azure/**          
        TargetFolder: '$(build.artifactstagingdirectory)/publish'
        OverWrite: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact'
      inputs:
        targetPath: '$(build.artifactstagingdirectory)/publish'
        artifactName: 'ApimEndpointsArtifacts'

- stage: Deploy_AT
  dependsOn: Build
  displayName: Deploy to AT
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: DevTest Management Resources
  - group: AT DevTest Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DAS-DevTest-ARM
      SubscriptionId: $(SubscriptionId)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(FindApprenticeshipOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(FindApprenticeshipOuterApiVersionSetName) `
                -ApiPath $(FindApprenticeshipOuterApiPath) `
                -ApiBaseUrl $(FindApprenticeshipOuterApiBaseUrl) `
                -ProductId $(FindApprenticeshipProductId) `
                -ApplicationIdentifierUri $(FindApprenticeshipOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(ReservationsOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(ReservationsOuterApiVersionSetName) `
                -ApiPath $(ReservationsOuterApiPath) `
                -ApiBaseUrl $(ReservationsOuterApiBaseUrl) `
                -ProductId $(ReservationsProductId) `
                -ApplicationIdentifierUri $(ReservationsOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(EmployerIncentivesOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(EmployerIncentivesOuterApiVersionSetName) `
                -ApiPath $(EmployerIncentivesOuterApiPath) `
                -ApiBaseUrl $(EmployerIncentivesOuterApiBaseUrl) `
                -ProductId $(EmployerIncentivesProductId) `
                -ApplicationIdentifierUri $(EmployerIncentivesOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

- stage: Deploy_TEST
  dependsOn: Build
  displayName: Deploy to TEST
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: DevTest Management Resources
  - group: TEST DevTest Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DAS-DevTest-ARM
      SubscriptionId: $(SubscriptionId)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(FindApprenticeshipOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(FindApprenticeshipOuterApiVersionSetName) `
                -ApiPath $(FindApprenticeshipOuterApiPath) `
                -ApiBaseUrl $(FindApprenticeshipOuterApiBaseUrl) `
                -ProductId $(FindApprenticeshipProductId) `
                -ApplicationIdentifierUri $(FindApprenticeshipOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(ReservationsOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(ReservationsOuterApiVersionSetName) `
                -ApiPath $(ReservationsOuterApiPath) `
                -ApiBaseUrl $(ReservationsOuterApiBaseUrl) `
                -ProductId $(ReservationsProductId) `
                -ApplicationIdentifierUri $(ReservationsOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(EmployerIncentivesOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(EmployerIncentivesOuterApiVersionSetName) `
                -ApiPath $(EmployerIncentivesOuterApiPath) `
                -ApiBaseUrl $(EmployerIncentivesOuterApiBaseUrl) `
                -ProductId $(EmployerIncentivesProductId) `
                -ApplicationIdentifierUri $(EmployerIncentivesOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

- stage: Deploy_TEST2
  dependsOn: Build
  displayName: Deploy to TEST2
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: DevTest Management Resources
  - group: TEST2 DevTest Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DAS-DevTest-ARM
      SubscriptionId: $(SubscriptionId)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(FindApprenticeshipOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(FindApprenticeshipOuterApiVersionSetName) `
                -ApiPath $(FindApprenticeshipOuterApiPath) `
                -ApiBaseUrl $(FindApprenticeshipOuterApiBaseUrl) `
                -ProductId $(FindApprenticeshipProductId) `
                -ApplicationIdentifierUri $(FindApprenticeshipOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(ReservationsOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(ReservationsOuterApiVersionSetName) `
                -ApiPath $(ReservationsOuterApiPath) `
                -ApiBaseUrl $(ReservationsOuterApiBaseUrl) `
                -ProductId $(ReservationsProductId) `
                -ApplicationIdentifierUri $(ReservationsOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DAS-DevTest-ARM
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(EmployerIncentivesOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DAS-DevTest-ARM
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(EmployerIncentivesOuterApiVersionSetName) `
                -ApiPath $(EmployerIncentivesOuterApiPath) `
                -ApiBaseUrl $(EmployerIncentivesOuterApiBaseUrl) `
                -ProductId $(EmployerIncentivesProductId) `
                -ApplicationIdentifierUri $(EmployerIncentivesOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

- stage: Deploy_PP
  dependsOn: Build
  displayName: Deploy to PP
  pool:
    name: DAS - Continuous Deployment
  variables:
  - group: PreProd Management Resources
  - group: PreProd Shared Resources
  jobs:
  - template: azure-pipelines-templates/deploy/job/arm-deploy.yml@das-platform-building-blocks
    parameters:
      ServiceConnection: SFA-DIG-PreProd (ARM)
      SubscriptionId: $(SubscriptionId)
      Environment: DEV
      TemplatePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.json
      ParametersPath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/azure/template.parameters.json
      ConfigSchemaPath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-apim-endpoints
      TemplateSecrets:
        LoggingRedisConnectionString: $(LoggingRedisConnectionString)
        ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)

  - deployment: Deploy_FindApprenticeshipTraining
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.FindApprenticeshipTraining }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(FindApprenticeshipOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.FindApprenticeshipTraining.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(FindApprenticeshipOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DIG-PreProd (ARM)
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(FindApprenticeshipOuterApiVersionSetName) `
                -ApiPath $(FindApprenticeshipOuterApiPath) `
                -ApiBaseUrl $(FindApprenticeshipOuterApiBaseUrl) `
                -ProductId $(FindApprenticeshipProductId) `
                -ApplicationIdentifierUri $(FindApprenticeshipOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion

  - deployment: Deploy_Reservations
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.Reservations }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(ReservationsOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.Reservations.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(ReservationsOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DIG-PreProd (ARM)
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(ReservationsOuterApiVersionSetName) `
                -ApiPath $(ReservationsOuterApiPath) `
                -ApiBaseUrl $(ReservationsOuterApiBaseUrl) `
                -ProductId $(ReservationsProductId) `
                -ApplicationIdentifierUri $(ReservationsOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true

  - deployment: Deploy_EmployerIncentives
    dependsOn: DeployInfrastructure
    condition: and(succeeded(), eq(${{ parameters.EmployerIncentives }}, true))
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
            parameters:
              ServiceConnection: SFA-DIG-PreProd (ARM)
              AppServiceName: $(EmployerIncentivesOuterApiAppServiceName)
              DeploymentPackagePath: $(Pipeline.Workspace)/ApimEndpointsArtifacts/SFA.DAS.EmployerIncentives.Api.Zip
          - checkout: das-platform-automation
          - task: AzurePowerShell@5
            displayName: Import-ApimSwaggerApiDefinition- $(EmployerIncentivesOuterApiAppServiceName)
            inputs:
              azureSubscription: SFA-DIG-PreProd (ARM)
              ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
              ScriptArguments:
                -ApimResourceGroup $(ApimResourceGroup) `
                -InstanceName $(InstanceName) `
                -AppServiceResourceGroup $(ResourceGroupName) `
                -ApiVersionSetName $(EmployerIncentivesOuterApiVersionSetName) `
                -ApiPath $(EmployerIncentivesOuterApiPath) `
                -ApiBaseUrl $(EmployerIncentivesOuterApiBaseUrl) `
                -ProductId $(EmployerIncentivesProductId) `
                -ApplicationIdentifierUri $(EmployerIncentivesOuterApiIdentifierUri)
              azurePowerShellVersion: LatestVersion
              pwsh: true