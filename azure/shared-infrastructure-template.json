{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceEnvironmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "serviceAppServicePlanSuffixes": {
            "type": "array"
        },
        "serviceSubnetNames": {
            "type": "array"
        },
        "appServicePlanSku": {
            "type": "object",
            "defaultValue": {
                "tier": "Standard",
                "size": "1",
                "instances": 1
            },
            "metadata": {
                "description": "SKU information for the existing ASP."
            }
        },
        "appServicePlanSkus": {
            "type": "array",
            "defaultValue": [
                {
                    "identifier": 0,
                    "tier": "Standard",
                    "size": "1",
                    "instances": 1
                }
            ],
            "metadata": {
                "description": "Takes an array of objects: '[{\"identifier\": 0,\"tier\": \"Basic\",\"size\": \"1\",\"instances\": 1}]. Removing the backslash. The identifier helps map the values to the deployed ASP."
            }
        },
        "serviceAppServicePlansSku": {
            "type": "object",
            "defaultValue": {
                "tier": "Standard",
                "size": "1",
                "instances": 1
            },
            "metadata": {
                "description": "SKU information for the Service APIM ASPs."
            }
        },
        "tags": {
            "type": "object"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0",
            "metadata": {
                "description": "Prefix address space of the Vnet"
            }
        },
        "subnetCount": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 5,
            "metadata": {
                "description": "Number of subnets to deploy. Normally one per deployed ASP."
            }
        },
        "subnetAddressSpaceCIDR": {
            "type": "string",
            "defaultValue": "/24",
            "metadata": {
                "description": "The CIDR notation of the subnet address space"
            }
        },
        "subnetServiceEndpointList": {
            "type": "array",
            "defaultValue": []
        },
        "subnetDelegations": {
            "type": "array",
            "defaultValue": []
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'), '-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "appServicePlanNamePrefix": "[concat(variables('resourceNamePrefix'), '-asp-')]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
        "subnetNamePrefix": "apimendp-sn",
        "emptyArray": [],
        "emptyObject": {},
        "copy": [
            {
                "name": "subnetCopy",
                "count": "[if(greater(parameters('subnetCount'), 0), parameters('subnetCount'), 1)]",
                "input": {
                    "name": "[concat(variables('subnetNamePrefix'), '-', copyIndex('subnetCopy'))]",
                    "properties": {
                        "addressPrefix": "[blocks.getNextAddressRange(parameters('sharedEnvVirtualNetworkAddressPrefix'), 25, copyIndex('subnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
                        "serviceEndpointList": "[parameters('subnetServiceEndpointList')]",
                        "delegations": "[parameters('subnetDelegations')]",
                        "networkSecurityGroup": "[variables('emptyObject')]",
                        "routeTable": "[variables('emptyObject')]"
                    }
                }
            },
            {
                "name": "serviceSubnetCopy",
                "count": "[length(parameters('serviceSubnetNames'))]",
                "input": {
                    "name": "[parameters('serviceSubnetNames')[copyIndex('serviceSubnetCopy')]]",
                    "properties": {
                        "addressPrefix": "[blocks.getNextAddressRange(parameters('sharedEnvVirtualNetworkAddressPrefix'), 220, copyIndex('serviceSubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
                        "serviceEndpointList": "[parameters('subnetServiceEndpointList')]",
                        "delegations": "[parameters('subnetDelegations')]",
                        "networkSecurityGroup": "[variables('emptyObject')]",
                        "routeTable": "[variables('emptyObject')]"
                    }
                }
            }
        ],

        "apimSubnets": "[if(greater(parameters('subnetCount'), 0), variables('subnetCopy'), variables('emptyArray'))]",
        "subnetConfiguration": "[variables('apimSubnets')]"
    },
    "functions": [
        {
            "namespace": "blocks",
            "members": {
                "getNextAddressRange": {
                    "parameters": [
                        {
                            "name": "networkPrefix",
                            "type": "string"
                        },
                        {
                            "name": "networkStartingAddress",
                            "type": "int"
                        },
                        {
                            "name": "index",
                            "type": "int"
                        },
                        {
                            "name": "mask",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat(parameters('networkPrefix'), '.' , add(parameters('networkStartingAddress'), parameters('index')) ,'.0', parameters('mask'))]"
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-05-01",
            "name": "[variables('resourceGroupName')]",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {}
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('apim-endpoint-app-service-plan-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('appServicePlanSku').size]"
                    },
                    "aspInstances": {
                        "value": "[parameters('appServicePlanSku').instances]"
                    },
                    "nonASETier": {
                        "value": "[parameters('appServicePlanSku').tier]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat( parameters('serviceAppServicePlanSuffixes')[copyIndex('serviceAppServicePlanNames')], '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "copy": {
                "name": "serviceAppServicePlanNames",
                "count": "[length(parameters('serviceAppServicePlanSuffixes'))]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[toLower(concat('das-', parameters('resourceEnvironmentName'), '-', parameters('serviceAppServicePlanSuffixes')[copyIndex('serviceAppServicePlanNames')]))]"
                    },
                    "aspSize": {
                        "value": "[parameters('serviceAppServicePlansSku').size]"
                    },
                    "aspInstances": {
                        "value": "[parameters('serviceAppServicePlansSku').instances]"
                    },
                    "nonASETier": {
                        "value": "[parameters('serviceAppServicePlansSku').tier]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat('apim-endpoint-app-service-plan-', copyIndex('appServicePlanLoop'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "copy": {
                "name": "appServicePlanLoop",
                "count": "[length(parameters('appServicePlanSkus'))]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[concat(variables('appServicePlanNamePrefix'), copyIndex('appServicePlanLoop'))]"

                    },
                    "aspSize": {
                        "value": "[parameters('appServicePlanSkus')[copyIndex('appServicePlanLoop')].size]"
                    },
                    "aspInstances": {
                        "value": "[parameters('appServicePlanSkus')[copyIndex('appServicePlanLoop')].instances]"
                    },
                    "nonASETier": {
                        "value": "[parameters('appServicePlanSkus')[copyIndex('appServicePlanLoop')].tier]"
                    }
                }
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('subnetConfiguration')[copyIndex('subnetLoop')].name, '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "copy": {
                "name": "subnetLoop",
                "count": "[length(variables('subnetConfiguration'))]",
                "mode": "Serial"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetConfiguration')[copyIndex('subnetLoop')].name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.addressPrefix]"
                    },
                    "serviceEndpointList": {
                        "value": "[variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.serviceEndpointList]"
                    },
                    "delegations": {
                        "value": "[variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.delegations]"
                    },
                    "networkSecurityGroup": {
                        "value": "[if(empty(variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.networkSecurityGroup), variables('emptyObject'), variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.networkSecurityGroup)]"
                    },
                    "routeTable": {
                        "value": "[if(empty(variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.routeTable), variables('emptyObject'), variables('subnetConfiguration')[copyIndex('subnetLoop')].properties.routeTable)]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat(copyIndex('serviceSubnetLoop'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "copy": {
                "name": "serviceSubnetLoop",
                "count": "[length(parameters('serviceSubnetNames'))]",
                "mode": "Serial"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.addressPrefix]"
                    },
                    "serviceEndpointList": {
                        "value": "[variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.serviceEndpointList]"
                    },
                    "delegations": {
                        "value": "[variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.delegations]"
                    },
                    "networkSecurityGroup": {
                        "value": "[if(empty(variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.networkSecurityGroup), variables('emptyObject'), variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.networkSecurityGroup)]"
                    },
                    "routeTable": {
                        "value": "[if(empty(variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.routeTable), variables('emptyObject'), variables('serviceSubnetCopy')[copyIndex('serviceSubnetLoop')].properties.routeTable)]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        }
    ],
    "outputs": {
        "appServicePlanSkus": {
            "type": "array",
            "value": "[parameters('appServicePlanSkus')]"
        },
        "subnetRangeOverRun": {
            "type": "bool",
            "value": "[greater(length(parameters('appServicePlanSkus')), 5)]"
        }
    }
}
