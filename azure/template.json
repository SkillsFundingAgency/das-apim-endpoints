{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "appServicePlanSku": {
            "type": "object",
            "defaultValue": {
                "tier": "Standard",
                "size": "2",
                "instances": 2
            }
        },
        "appServiceAllowedIPs": {
            "type": "array",
            "defaultValue": []
        },
        "apimEndpointsSubnetResourceId": {
            "type": "string"
        },
        "outerApiArray": {
            "type": "array"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "sharedServiceBusName": {
            "type": "string"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "loggingRedisKey": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "tags": {
            "type": "object"
        },
        "resourceGroupLocation": {
            "type": "string"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "apim-endpoint-app-service-plan",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('appServicePlanSku').size]"
                    },
                    "aspInstances": {
                        "value": "[parameters('appServicePlanSku').instances]"
                    },
                    "nonASETier": {
                        "value": "[parameters('appServicePlanSku').tier]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('cert-', parameters('outerApiArray')[copyIndex()].keyVaultCertificateName, copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('outerApiArray')[copyIndex()].keyVaultCertificateName]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            },
            "copy": {
                "name": "certificateLoop",
                "count": "[length(parameters('outerApiArray'))]",
                "mode": "Serial"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('api-application-insights-', parameters('outerApiArray')[copyIndex()].appServiceName)]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[parameters('outerApiArray')[copyIndex()].appServiceName]"
                    },
                    "attachedService": {
                        "value": "[parameters('outerApiArray')[copyIndex()].appServiceName]"
                    }
                }
            },
            "copy": {
                "name": "appInsightsLoop",
                "count": "[length(parameters('outerApiArray'))]"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('api-app-service-', parameters('outerApiArray')[copyIndex()].appServiceName)]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "dependsOn": [
                "apim-endpoint-app-service-plan"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[parameters('outerApiArray')[copyIndex()].appServiceName]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "Environment",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ConfigNames",
                                    "value": "[parameters('outerApiArray')[copyIndex()].configNames]"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "LoggingRedisKey",
                                    "value": "[parameters('loggingRedisKey')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference(concat('api-application-insights-', parameters('outerApiArray')[copyIndex()].appServiceName)).outputs.InstrumentationKey.value]"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('outerApiArray')[copyIndex()].customHostName]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(concat('cert-', parameters('outerApiArray')[copyIndex()].keyVaultCertificateName, copyIndex())).outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    },
                    "subnetResourceId": {
                        "value": "[parameters('apimEndpointsSubnetResourceId')]"
                    }
                }
            },
            "copy": {
                "name": "appServiceLoop",
                "count": "[length(parameters('outerApiArray'))]"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('role-assignment-', parameters('outerApiArray')[copyIndex()].appServiceName)]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'role-assignments/role-assignment-service-bus.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('api-app-service-', parameters('outerApiArray')[copyIndex()].appServiceName)).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "ServiceBusSender"
                    },
                    "resourceName": {
                        "value": "[parameters('sharedServiceBusName')]"
                    }
                }
            },
            "copy": {
                "name": "roleAssignmentLoop",
                "count": "[length(parameters('outerApiArray'))]"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat('role-assignment-staging-', parameters('outerApiArray')[copyIndex()].appServiceName)]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'role-assignments/role-assignment-service-bus.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('api-app-service-', parameters('outerApiArray')[copyIndex()].appServiceName)).outputs.stagingManagedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "ServiceBusSender"
                    },
                    "resourceName": {
                        "value": "[parameters('sharedServiceBusName')]"
                    }
                }
            },
            "copy": {
                "name": "stagingRoleAssignmentLoop",
                "count": "[length(parameters('outerApiArray'))]"
            }
        }
    ],
    "outputs": {
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        }
    }
}