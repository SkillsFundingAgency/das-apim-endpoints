{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": ""
        },
        "appServiceAllowedIPs": {
            "type": "array",
            "defaultValue": []
        },
        "apimEndpointsSubnetResourceId": {
            "type": "string"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "sharedServiceBusName": {
            "type": "string"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "loggingRedisKey": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "appServiceName": {
            "type": "string"
        },
        "customHostName": {
            "type": "string"
        },
        "appServiceKeyVaultCertificateName": {
            "type": "string"
        },
        "configNames": {
            "type": "string"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "applicationInsightsConnectionString": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Shared application insights connection string retrieved from the get-product-app-insights step"
            }
        },
        "applicationInsightsResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Shared application insights resource ID retrieved from the get-product-app-insights step"
            }
        },
        "alertActionGroupResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Alert group resource ID found in the management resources variable groups"
            }
        },
        "enableFailedRequestAlert": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enables alerting on app insights failed requests"
            }
        },
        "enableResponseTimeAlert": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enables alerting on app insights response times"
            }
        },
        "disableResponseTimeAlertNotifications": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Deploys alerting on app insights response times"
            }
        },
        "disableFailedRequestAlertNotifications": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Deploys alerting on app insights response times"
            }
        },
        "productShortName": {
            "type": "string",
            "defaultValue": ""
        },
        "preProdAlertActionGroupResourceId": {
            "type": "string"
        },
        "deployPrivateLinkedScopedResource": {
            "type": "bool"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "appServicePlanName": "[if(empty(parameters('appServicePlanName')), concat(variables('resourceNamePrefix'), '-asp'), parameters('appServicePlanName'))]",
        "alertActionGroupResourceIdFailedRequests": "[if(and(equals(parameters('environmentName'), 'PROD'), equals(parameters('productShortName'), 'ea')), parameters('preProdAlertActionGroupResourceId'), parameters('alertActionGroupResourceId'))]",
        "alertActionGroupResourceIdResponseTime": "[if(and(equals(parameters('environmentName'), 'PROD'), equals(parameters('productShortName'), 'ya')), parameters('preProdAlertActionGroupResourceId'), parameters('alertActionGroupResourceId'))]",
        "privateLinkScopeName": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-shared-ampls'))]"

    },
    "resources": [
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('cert-', parameters('appServiceName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('appServiceKeyVaultCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('api-application-insights-', parameters('appServiceName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "attachedService": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[resourceId(parameters('logAnalyticsSubscriptionId'),parameters('sharedManagementResourceGroup'),'Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkspaceName'))]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployPrivateLinkedScopedResource')]",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('appServiceName'), '-private-link-scoped-')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'private-linked-scoped-resource.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "privateLinkScopeName": {
                        "value": "[variables('privateLinkScopeName')]"
                    },
                    "scopedResourceName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "scopedResourceId": {
                        "value": "[reference(concat('api-application-insights-', parameters('appServiceName'))).outputs.AppInsightsResourceId.value]"
                    }
                }
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('api-app-service-', parameters('appServiceName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "Environment",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ConfigNames",
                                    "value": "[parameters('configNames')]"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "LoggingRedisKey",
                                    "value": "[parameters('loggingRedisKey')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ResourceEnvironmentName",
                                    "value": "[parameters('resourceEnvironmentName')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                    "value": "[if(greater(length(parameters('applicationInsightsConnectionString')), 0), parameters('applicationInsightsConnectionString'), reference(concat('api-application-insights-', parameters('appServiceName'))).outputs.ConnectionString.value)]"
                                },
                                {
                                    "name": "WEBSITE_LOAD_USER_PROFILE",
                                    "value": "1"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('customHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(concat('cert-', parameters('appServiceName'))).outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    },
                    "subnetResourceId": {
                        "value": "[parameters('apimEndpointsSubnetResourceId')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('role-assignment-', parameters('appServiceName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'role-assignments/role-assignment-service-bus.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('api-app-service-', parameters('appServiceName'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "ServiceBusSender"
                    },
                    "resourceName": {
                        "value": "[parameters('sharedServiceBusName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('role-assignment-staging-', parameters('appServiceName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('deploymentUrlBase'),'role-assignments/role-assignment-service-bus.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('api-app-service-', parameters('appServiceName'))).outputs.stagingManagedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "ServiceBusSender"
                    },
                    "resourceName": {
                        "value": "[parameters('sharedServiceBusName')]"
                    }
                }
            }
        },
        {
            "condition": "[and( equals(parameters('enableFailedRequestAlert'), true()), greater(length(parameters('applicationInsightsResourceId')), 0) )]",
            "apiVersion": "2021-04-01",
            "name": "[concat('application-insights-', parameters('appServiceName'), '-alert')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights-failed-requests-alert.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "applicationInsightsResourceId": {
                        "value": "[parameters('applicationInsightsResourceId')]"
                    },
                    "alertActionGroupResourceId": {
                        "value": "[variables('alertActionGroupResourceIdFailedRequests')]"
                    },
                    "enabled": {
                        "value": "[if(parameters('disableFailedRequestAlertNotifications'), false(), true())]"
                    }
                }
            }
        },
        {
            "condition": "[and( equals(parameters('enableResponseTimeAlert'), true()), greater(length(parameters('applicationInsightsResourceId')), 0) )]",
            "apiVersion": "2021-04-01",
            "name": "[concat('ai-', parameters('appServiceName'), '-response-time-alert')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights-response-time-alert.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "applicationInsightsResourceId": {
                        "value": "[parameters('applicationInsightsResourceId')]"
                    },
                    "alertActionGroupResourceId": {
                        "value": "[variables('alertActionGroupResourceIdResponseTime')]"
                    },
                    "enabled": {
                        "value": "[if(parameters('disableResponseTimeAlertNotifications'), false(), true())]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        }
    }
}
